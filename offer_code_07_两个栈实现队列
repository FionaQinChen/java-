题目：用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。

思路：两个栈 stack1 和 stack2:
    push 动作都在 stack1 中进行，
    pop 动作在 stack2 中进行。当 stack2 不为空时，直接 pop，
    当 stack2 为空时，先把 stack1 中的元素 pop 出来，push 到 stack2 中，再从 stack2 中 pop 元素。
    
import java.util.Stack;    
public class Solution{
    //init two stacks
    Stack<Integer> stack1 = new Stack<Integer>();
    Stack<Integer> stack2 = new Stack<Integer>();
   
   //stack1 push
    public void push(int node) {
        stack1.push(node);
    }
    
    //stack2 pop
    public int pop(){
        if(stack1.isEmpty() && stack2.isEmpty()){
            throw new RuntimeException("Queue is empty!");
        }
        int node;
        if(stack2.isEmpty()){
            while(!stack1.isEmpty()){
                node = stack1.pop();
                stack2.push(node);
            }
        }
        return stack2.pop();
    }
    
}    
